#!/bin/sh

PATH="/rescue"

if [ "`ps -o command 1 | tail -n 1 | ( read c o; echo ${o} )`" = "-s" ]; then
	echo "==> Running in single-user mode"
	SINGLE_USER="true"
fi

echo "==> Remount rootfs as read-write"
mount -u -w /

makedir=${makedir:-"/bin /boot /cdrom /compat /include /lib /libdata /libexec /man /media /memdisk /mnt /net /proc /rescue /root /sbin /share /tests /tmp /usr /var /www"}

echo "==> Make mountpoints /cdrom /memdisk /usr"
mkdir -p ${makedir}

echo "Waiting for GhostBSD media to initialize"
while : ; do
    [ -e "/dev/iso9660/GHOSTBSD" ] && echo "found /dev/iso9660/GHOSTBSD" && sleep 2 && break
    sleep 2
done

echo "==> Mount cdrom"
mount_cd9660 /dev/iso9660/@VOLUME@ /cdrom

echo "==> mdmfs /cdrom/data/usr.uzip in /usr"
mdmfs -P -F /cdrom/data/usr.uzip -o ro md.uzip /usr

echo "==> Mount swap-based memdisk"
MEMDISK_SIZE="$(($(sysctl -n hw.usermem) / 1024 / 1024 / 2))"
mdmfs -s "${MEMDISK_SIZE}m" md /memdisk || exit 1

echo "==> tar zxfv /cdrom/data/mfs.tgz -C /memdisk"
tar zxf /cdrom/data/mfs.tgz -C /memdisk

while read uniondir; do
  mount_nullfs /memdisk/${uniondir} /${uniondir}
done < /cdrom/data/uniondirs

echo "==> Mount devfs /dev"
mount -t devfs devfs /dev

if [ "$SINGLE_USER" = "true" ]; then
  echo "Starting interactive shell in temporary rootfs ..."
  sh
fi

kenv init_shell="/bin/sh"

exit 0
